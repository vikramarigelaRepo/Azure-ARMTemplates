{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "tenantId": {
      "type" : "string",
      "defaultValue" : "[subscription().tenantId]",
     "metadata": {
        "description": "Specifies the Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Get it by using Get-AzSubscription cmdlet."
      }
    },
    "objectId": {
      "type": "string",
      "metadata": {
         "description": "Specifies the objectid that has access to keyvault."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "runtime": {
      "type": "string",
      "defaultValue": "dotnet",
      "allowedValues": [
        "node",
        "dotnet",
        "java"
      ],
      "metadata": {
        "description": "The language worker runtime to load in the function app."
      }
    }
  },
  "variables": {
    "subscriptionTenantId": "[parameters('tenantId')]",
    "functionAppName": "[concat('fnapp', uniquestring(resourceGroup().id))]",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'azfunctions')]",
    "functionWorkerRuntime": "[parameters('runtime')]",
    "keyVaultName": "[concat('fnapp', uniquestring(resourceGroup().id))]",
    "destinationStorageAccountName": "mydemostorage05212020",
    "destinationStorageResourceGroup": "LogicApprg",
    "insightsLocation": {
      "AzureCloud": "eastus",
      "AzureUSGovernment": "usgovvirginia"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2019-06-01",
      "location": "[parameters('location')]",
      "kind": "Storage",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "name": "[variables('functionAppName')]",
        "computeMode": "Dynamic"
      }
    },
    {
      "name": "[variables('keyVaultName')]",
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2016-10-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "[variables('keyVaultName')]"
      },
      "properties": {
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": true,
        "tenantId": "[variables('subscriptionTenantId')]",
        "accessPolicies": [
          {
            "tenantId": "[variables('subscriptionTenantId')]",
            "objectId": "",
            "permissions": {
              "keys": [
                "Get"
              ],
              "secrets": [
                "List",
                "Get",
                "Set"
              ]
            }
          },
          {
            "tenantId": "[variables('subscriptionTenantId')]",
            "objectId": "",
            "permissions": {
              "keys": [
                "Get"
              ],
              "secrets": [
                "List",
                "Get",
                "Set"
              ]
            }
          }
        ],
        "sku": {
          "name": "standard",
          "family": "A"
        }
      }
    },
    {
      "name": "[concat(variables('keyVaultName'),'/','StorageAccount')]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2016-10-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('destinationStorageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId(variables('destinationStorageResourceGroup'),'Microsoft.Storage/storageAccounts', variables('destinationStorageAccountName')), '2019-06-01').keys[0].value)]"
      }
    },
    {
      "apiVersion": "2018-02-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('functionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.KeyVault/vaults',variables('keyVaultName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionAppName'))]",
        "siteConfig": {

          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "destinationContainer",
              "value": "invoicingfiles"
            },
            {
              "name": "destinationStorage",
              "value": "[concat('@Microsoft.KeyVault(SecretUri=',reference(resourceId(resourceGroup().name,'Microsoft.KeyVault/vaults/secrets',variables('keyVaultName'),'StorageAccount')).SecretUri)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~10"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components', variables('functionAppName')), '2018-05-01-preview').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[variables('functionWorkerRuntime')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2018-05-01-preview",
      "name": "[variables('functionAppName')]",
      "type": "microsoft.insights/components",
      "kind": "WEB",
      "location": "[variables('insightsLocation')[environment().name]]",
      "tags": {
        "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('functionAppName')))]": "Resource"
      },
      "properties": {
        "ApplicationId": "[variables('functionAppName')]",
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    }
  ]
}